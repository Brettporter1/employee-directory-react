{"ast":null,"code":"import _objectSpread from \"/Users/brettporter/github/homework/employee-directory-react/employee-directory/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/brettporter/github/homework/employee-directory-react/employee-directory/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/brettporter/github/homework/employee-directory-react/employee-directory/src/components/EmployeeList.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport EmployeeItem from './EmployeeItem';\nimport EmployeeContext from '../utils/EmployeeContext';\nimport API from '../utils/API';\n\nconst EmployeeList = () => {\n  const _useState = useState({\n    employees: [],\n    displayedEmployees: [],\n    sortOrder: 'desending'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        employeeState = _useState2[0],\n        setEmployeeState = _useState2[1];\n\n  const handleSearch = e => {\n    const searchTerm = e.target.value;\n    const searchList = employeeState.employees.filter(employee => {\n      let nameVal = `${employee.name.first.toLowerCase()} ${employee.name.last.toLowerCase()}`;\n\n      if (nameVal.indexOf(searchTerm.toLowerCase()) !== -1) {\n        return employee;\n      }\n    });\n    setEmployeeState(_objectSpread({}, employeeState, {\n      displayedEmployees: searchList\n    }));\n  };\n\n  useEffect(() => {\n    API.getUsers().then(results => {\n      setEmployeeState(_objectSpread({}, employeeState, {\n        employees: results.data.results,\n        displayedUsers: results.data.results\n      }));\n    });\n  }, []);\n  return React.createElement(EmployeeContext.Provider, {\n    value: {\n      employeeState,\n      handleSearch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"employee-list-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"employee-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    className: \"employee-table-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"image\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"name\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"email\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"phone number\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, employeeState.map(employee => React.createElement(\"tr\", {\n    className: \"employee-table-row\",\n    key: employee.login.uuid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, employee.picture.thumbnail), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, employee.name.first, \" \", employee.name.last), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, employee.email), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, employee.phone)))))));\n};\n\nexport default EmployeeList;","map":{"version":3,"sources":["/Users/brettporter/github/homework/employee-directory-react/employee-directory/src/components/EmployeeList.js"],"names":["React","useState","useContext","useEffect","EmployeeItem","EmployeeContext","API","EmployeeList","employees","displayedEmployees","sortOrder","employeeState","setEmployeeState","handleSearch","e","searchTerm","target","value","searchList","filter","employee","nameVal","name","first","toLowerCase","last","indexOf","getUsers","then","results","data","displayedUsers","map","login","uuid","picture","thumbnail","email","phone"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport EmployeeItem from './EmployeeItem';\nimport EmployeeContext from '../utils/EmployeeContext';\nimport API from '../utils/API';\n\nconst EmployeeList = () => {\n  const [employeeState, setEmployeeState] = useState({\n    employees: [],\n    displayedEmployees: [],\n    sortOrder: 'desending'\n  });\n\n  const handleSearch = e => {\n    const searchTerm = e.target.value;\n    const searchList = employeeState.employees.filter(employee => {\n      let nameVal = `${employee.name.first.toLowerCase()} ${employee.name.last.toLowerCase()}`;\n      if (nameVal.indexOf(searchTerm.toLowerCase()) !== -1) {\n        return employee;\n      }\n    });\n    setEmployeeState({ ...employeeState, displayedEmployees: searchList });\n  };\n\n  useEffect(() => {\n    API.getUsers().then(results => {\n      setEmployeeState({\n        ...employeeState,\n        employees: results.data.results,\n        displayedUsers: results.data.results\n      });\n    });\n  }, []);\n  return (\n    <EmployeeContext.Provider value={{ employeeState, handleSearch }}>\n      <div className='employee-list-container'>\n        <table className='employee-table'>\n          <thead className='employee-table-heading'>\n            <tr>\n              <td>image</td>\n              <td>name</td>\n              <td>email</td>\n              <td>phone number</td>\n            </tr>\n          </thead>\n          <tbody>\n            {employeeState.map(employee => (\n              <tr className='employee-table-row' key={employee.login.uuid}>\n                <td>{employee.picture.thumbnail}</td>\n                <td>\n                  {employee.name.first} {employee.name.last}\n                </td>\n                <td>{employee.email}</td>\n                <td>{employee.phone}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </EmployeeContext.Provider>\n  );\n};\n\nexport default EmployeeList;\n"]},"metadata":{},"sourceType":"module"}