{"ast":null,"code":"import _objectSpread from \"/Users/brettporter/github/homework/employee-directory-react/employee-directory/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/brettporter/github/homework/employee-directory-react/employee-directory/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/brettporter/github/homework/employee-directory-react/employee-directory/src/App.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport EmployeeList from './components/EmployeeList';\nimport Search from './components/Search';\nimport Nav from './components/Nav';\nimport EmployeeContext from './utils/EmployeeContext';\nimport API from './utils/API';\nimport './App.css';\n\nconst App = () => {\n  const _useState = useState({\n    employees: [],\n    displayedEmployees: [],\n    sortOrder: 'descending'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        employees = _useState2[0],\n        setEmployees = _useState2[1];\n\n  const handleSearch = e => {\n    const searchTerm = e.target.value;\n    console.log(searchTerm);\n    console.log(employees.employees);\n    const searchList = employees.employees.filter(employee => {\n      let nameVal = `${employee.name.first.toLowerCase()} ${employee.name.last.toLowerCase()}`;\n\n      if (nameVal.indexOf(searchTerm.toLowerCase()) !== -1) {\n        return employee;\n      }\n    });\n    setEmployees(_objectSpread({}, employees, {\n      displayedEmployees: searchList\n    }));\n  };\n\n  const handleSort = (a, b) => {\n    console.log(employees.sortOrder);\n\n    if (employees.sortOrder === 'descending') {\n      employees.displayedEmployees.sort(a - b);\n      setEmployees(_objectSpread({}, employees, {\n        sortOrder: 'ascending'\n      }));\n    } else {\n      employees.displayedEmployees.sort(b - a);\n      setEmployees(_objectSpread({}, employees, {\n        sortOrder: 'descending'\n      }));\n    }\n  };\n\n  useEffect(() => {\n    API.getUsers().then(results => {\n      setEmployees(_objectSpread({}, employees, {\n        employees: results.data.results,\n        displayedEmployees: results.data.results\n      }));\n    });\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(EmployeeContext.Provider, {\n    value: {\n      employees,\n      handleSearch,\n      handleSort\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Search, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"main-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(EmployeeList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/brettporter/github/homework/employee-directory-react/employee-directory/src/App.js"],"names":["React","Fragment","useState","useEffect","EmployeeList","Search","Nav","EmployeeContext","API","App","employees","displayedEmployees","sortOrder","setEmployees","handleSearch","e","searchTerm","target","value","console","log","searchList","filter","employee","nameVal","name","first","toLowerCase","last","indexOf","handleSort","a","b","sort","getUsers","then","results","data"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport EmployeeList from './components/EmployeeList';\nimport Search from './components/Search';\nimport Nav from './components/Nav';\nimport EmployeeContext from './utils/EmployeeContext';\nimport API from './utils/API';\nimport './App.css';\n\nconst App = () => {\n  const [employees, setEmployees] = useState({\n    employees: [],\n    displayedEmployees: [],\n    sortOrder: 'descending'\n  });\n\n  const handleSearch = e => {\n    const searchTerm = e.target.value;\n    console.log(searchTerm);\n    console.log(employees.employees);\n    const searchList = employees.employees.filter(employee => {\n      let nameVal = `${employee.name.first.toLowerCase()} ${employee.name.last.toLowerCase()}`;\n      if (nameVal.indexOf(searchTerm.toLowerCase()) !== -1) {\n        return employee;\n      }\n    });\n    setEmployees({ ...employees, displayedEmployees: searchList });\n  };\n\n  const handleSort = (a, b) => {\n    console.log(employees.sortOrder);\n    if (employees.sortOrder === 'descending') {\n      employees.displayedEmployees.sort(a - b);\n      setEmployees({ ...employees, sortOrder: 'ascending' });\n    } else {\n      employees.displayedEmployees.sort(b - a);\n      setEmployees({ ...employees, sortOrder: 'descending' });\n    }\n  };\n\n  useEffect(() => {\n    API.getUsers().then(results => {\n      setEmployees({\n        ...employees,\n        employees: results.data.results,\n        displayedEmployees: results.data.results\n      });\n    });\n  }, []);\n  return (\n    <Fragment>\n      <Nav />\n      <EmployeeContext.Provider value={{ employees, handleSearch, handleSort }}>\n        <Search />\n        <div className='main-container'>\n          <EmployeeList />\n        </div>\n      </EmployeeContext.Provider>\n    </Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}